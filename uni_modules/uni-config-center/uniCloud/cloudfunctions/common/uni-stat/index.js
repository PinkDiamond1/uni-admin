!function(e,t){for(var i in t)e[i]=t[i]}(exports,function(e){var t={};function i(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(s,a,function(t){return e[t]}.bind(null,a));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.accMul=function(e,t){if(isNaN(e)||isNaN(t))return NaN;const{value:i,power:s}=_(e),{value:a,power:n}=_(t);return i*a/Math.pow(10,s+n)},t.camel2snake=h,t.camel2snakeJson=function(e){return u(e,"camel2snake")},t.deepClone=function(e){return JSON.parse(JSON.stringify(e))},t.getDateStr=g,t.getExtension=function(e){return r[e]},t.getFullTimeStr=function(e){return g(e=e||new Date)+" "+m(e)},t.getOffsetDate=function(e){return new Date(Date.now()+6e4*((new Date).getTimezoneOffset()+60*(e||0)))},t.getTimeStr=m,t.hasOwn=n,t.isFn=function(e){return"function"==typeof e},t.isPlainObject=o,t.log=function(){0},t.mime2ext=void 0,t.snake2camel=c,t.snake2camelJson=function(e){return u(e,"snake2camel")};const s=Object.prototype.toString,a=Object.prototype.hasOwnProperty;function n(e,t){return a.call(e,t)}function o(e){return"[object Object]"===s.call(e)}const r={"image/png":"png","image/jpeg":"jpg","image/gif":"gif","image/svg+xml":"svg","image/bmp":"bmp","image/webp":"webp"};t.mime2ext=r;const l=/_(\w)/g,d=/[A-Z]/g;function c(e){return e.replace(l,(e,t)=>t?t.toUpperCase():"")}function h(e){return e.replace(d,e=>"_"+e.toLowerCase())}function u(e,t){let i,s;switch(t){case"snake2camel":s=c,i=l;break;case"camel2snake":s=h,i=d}for(const a in e)if(n(e,a)&&i.test(a)){const i=s(a);e[i]=e[a],delete e[a],o(e[i])?e[i]=u(e[i],t):Array.isArray(e[i])&&(e[i]=e[i].map(e=>u(e,t)))}return e}function g(e,t="-"){e=e||new Date;const i=[];return i.push(e.getFullYear()),i.push(("00"+(e.getMonth()+1)).substr(-2)),i.push(("00"+e.getDate()).substr(-2)),i.join(t)}function m(e,t=":"){e=e||new Date;const i=[];return i.push(("00"+e.getHours()).substr(-2)),i.push(("00"+e.getMinutes()).substr(-2)),i.push(("00"+e.getSeconds()).substr(-2)),i.join(t)}function _(e){const t=e.toString().split("."),i=t[1]?t[1].length:0;return{value:Number(t.join("")),power:i}}},function(e,t,i){"use strict";var s,a=(s=i(2))&&s.__esModule?s:{default:s},n=i(8);e.exports={init:(e={})=>(e.clientType=e.clientType||__ctx__.PLATFORM,(0,n.createApi)(a.default,e))}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.Version=t.StatResult=t.StatEvent=t.ShareLog=t.SessionLog=t.Scenes=t.RunErrors=t.Platform=t.PageResult=t.PageLog=t.Page=t.Loyalty=t.EventResult=t.EventLog=t.ErrorResult=t.ErrorLog=t.Channel=t.App=t.ActvieUsers=void 0;var s=i(3),a=i(4),n=i(6);class o extends a.BaseMod{constructor(){super(),this.tableName="app-list"}async getAppByAppid(e){const t=await this.getCollection(this.tableName).where({appid:e}).limit(1).get();return t.data.length>0?t.data[0]:[]}async getAppIdByAppid(e){const t=await this.getAppByAppid(e);return t.length>0?t._id:""}}t.App=o;class r extends a.BaseMod{constructor(){super(),this.tableName="stat-app-versions"}async getVersion(e,t,i){const s="uni-stat-version-"+e+"-"+t+"-"+i;let a=await this.getCache(s);if(!a){const n=await this.getCollection(this.tableName).where({appid:e,platform_id:t,version:i}).limit(1).get();a=[],n.data.length>0&&(a=n.data[0],await this.setCache(s,a))}return a}async getVersionAndCreate(e,t,i){const a=await this.getVersion(e,t,i);if(0===a.length&&i.length>0&&!i.includes("}")){const a=(new s.DateTime).getTime(),n={appid:e,platform_id:t,version:i,create_time:a,update_time:a},o=await this.insert(this.tableName,n);if(o&&o.id)return Object.assign(n,{_id:o.id})}return a}async getVersionId(e,t,i){const s=await this.getVersion(e,t,i);return s.length>0?s._id:""}}t.Version=r;class l extends a.BaseMod{constructor(){super(),this.tableName="app-platforms"}async getPlatform(e,t){const i="uni-stat-platform-"+e+"-"+t;let s=await this.getCache(i);if(!s){const a=this.getPlatformCode(e,t),n=await this.getCollection(this.tableName).where({code:a}).limit(1).get();s=[],n.data.length>0&&(s=n.data[0],await this.setCache(i,s))}return s}async getPlatformAndCreate(e,t){if(!e)return!1;const i=await this.getPlatform(e,t);if(0===i.length){const i=this.getPlatformCode(e,t),a={code:i,name:i,create_time:(new s.DateTime).getTime()},n=await this.insert(this.tableName,a);if(n&&n.id)return Object.assign(a,{_id:n.id})}return i}async getPlatformId(e,t){const i=await this.getPlatform(e,t);return i.length>0?i._id:""}getPlatformCode(e,t){let i=e;return"n"===e&&(i="i"===t?"ios":"android"),i}}t.Platform=l;class d extends a.BaseMod{constructor(){super(),this.tableName="mp-scenes"}async getScenes(e,t){const i="uni-stat-scenes-"+e+"-"+t;let s=await this.getCache(i);if(!s){const a=await this.getCollection(this.tableName).where({platform:e,scene_code:t}).limit(1).get();s=[],a.data.length>0&&(s=a.data[0],await this.setCache(i,s))}return s}async getScenesByPlatformId(e,t){const i=new l;let s,a=await this.getCollection(i.tableName).where({_id:e}).limit(1).get();return a.data.length>0?(a=a.data[0],s=await this.getScenes(a.code,t)):s=[],s}async getScenesName(e,t){const i=await this.getScenes(e,t);return 0===i.length?"":i.scene_name}async getScenesNameByPlatformId(e,t){const i=await this.getScenesByPlatformId(e,t);return 0===i.length?"":i.scene_name}}t.Scenes=d;class c extends a.BaseMod{constructor(){super(),this.tableName="app-channels",this.scenes=new d}async getChannel(e,t,i){const a="uni-stat-channel-"+e+"-"+t+"-"+i;let n=await this.getCache(a);if(!n){const o=await this.getCollection(this.tableName).where({appid:e,platform_id:t,channel_code:i}).limit(1).get();if(n=[],o.data.length>0){if(n=o.data[0],""===n.channel_name){const e=await this.scenes.getScenesNameByPlatformId(t,i);e&&await this.update(this.tableName,{channel_name:e,update_time:(new s.DateTime).getTime()},{_id:n._id})}await this.setCache(a,n)}}return n}async getChannelAndCreate(e,t,i){if(!e||!t)return[];const a=await this.getChannel(e,t,i);if(0===a.length){const a=(new s.DateTime).getTime(),n={appid:e,platform_id:t,channel_code:i,channel_name:await this.scenes.getScenesNameByPlatformId(t,i),create_time:a,update_time:a},o=await this.insert(this.tableName,n);if(o&&o.id)return Object.assign(n,{_id:o.id})}return a}async getChannelId(e,t,i){const s=await this.getChannel(e,t,i);return s.length>0?s._id:""}getChannelCode(e){return"h5"===e.ut?"":e.ch?e.ch:e.sc?e.sc:""}}t.Channel=c;class h extends a.BaseMod{constructor(){super(),this.tableName="stat-pages"}async getPage(e,t){const i="uni-stat-page-"+e+"-"+t;let s=await this.getCache(i);if(!s){const a=await this.getCollection(this.tableName).where({appid:e,path:t}).limit(1).get();s=[],a.data.length>0&&(s=a.data[0],await this.setCache(i,s))}return s}async getPageAndCreate(e,t,i){if(!t)return!1;const a=this.getBaseUrl(t),n=await this.getPage(e,a);if(0===n.length){const t=(new s.DateTime).getTime(),n={appid:e,path:a,title:i,page_params:[],create_time:t,update_time:t},o=await this.insert(this.tableName,n);if(o&&o.id)return Object.assign(n,{_id:o.id})}else if(!n.title&&i){const t="uni-stat-page-"+e+"-"+a;await this.clearCache(t),await this.update(this.tableName,{title:i},{_id:n._id})}return n}async getPageId(e,t){const i=await this.getPage(e,t);return i.length>0?i._id:""}getBaseUrl(e){let t=e.split("?")[0];return"/"!==t&&0===t.indexOf("/")&&(t=t.substr(1)),t}}t.Page=h;class u extends a.BaseMod{constructor(){super(),this.tableName="stat-events",this.defaultEvent=this.getConfig("event")||{login:"登录",register:"注册",click:"点击",share:"分享",pay_success:"支付成功",pay_fail:"支付失败"}}async getEvent(e,t){const i="uni-stat-event-"+e+"-"+t;let s=await this.getCache(i);if(!s){const a=await this.getCollection(this.tableName).where({appid:e,event_key:t}).get();s=[],a.data.length>0&&(s=a.data[0],await this.setCache(i,s))}return s}async getEventAndCreate(e,t){const i=await this.getEvent(e,t);if(0===i.length){var a;const i=(new s.DateTime).getTime(),n={appid:e,event_key:t,event_name:null!==(a=this.defaultEvent[t])&&void 0!==a?a:"",create_time:i,update_time:i},o=await this.insert(this.tableName,n);if(o&&o.id)return Object.assign(n,{_id:o.id})}return i}}t.StatEvent=u;class g extends a.BaseMod{constructor(){super(),this.tableName="stat-session-logs"}async batchFill(e){let t,i,a,n,o;const r=[],d=new h,u=new l,g=new s.DateTime,m=new c;for(const s in e){var _,p,f,v,w,y,T,b,N,D,C,$,S,O,k;t=e[s],t.ak&&(t.ut&&t.uuid&&(i=await d.getPageAndCreate(t.ak,t.url,t.ttpj),i&&0!==i.length&&(a=g.getTime(),n=t.fvts?g.strToTime(t.fvts):a,o=t.lvts?g.strToTime(t.lvts):0,r.push({appid:t.ak,version:null!==(_=t.v)&&void 0!==_?_:"",platform:u.getPlatformCode(t.ut,t.p),channel:m.getChannelCode(t),uuid:t.uuid,is_first_visit:o&&n!==o?0:1,first_visit_time:n,last_visit_time:a,visit_count:t.tvc?parseInt(t.tvc):1,entry_page_id:i._id,exit_page_id:i._id,page_count:0,event_count:0,duration:1,sdk_version:null!==(p=t.mpsdk)&&void 0!==p?p:"",platform_version:null!==(f=t.mpv)&&void 0!==f?f:"",device_os_name:t.p&&"i"===t.p?"ios":"android",device_os_version:null!==(v=t.sv)&&void 0!==v?v:"",device_vendor:null!==(w=t.brand)&&void 0!==w?w:"",device_model:null!==(y=t.md)&&void 0!==y?y:"",device_language:null!==(T=t.lang)&&void 0!==T?T:"",device_pixel_ratio:null!==(b=t.pr)&&void 0!==b?b:"",device_window_width:null!==(N=t.ww)&&void 0!==N?N:"",device_window_height:null!==(D=t.wh)&&void 0!==D?D:"",device_screen_width:null!==(C=t.sw)&&void 0!==C?C:"",device_screen_height:null!==($=t.sh)&&void 0!==$?$:"",location_ip:"",location_latitude:t.lat?parseFloat(t.lat):0,location_longitude:t.lng?parseFloat(t.lng):0,location_country:null!==(S=t.cn)&&void 0!==S?S:"",location_province:null!==(O=t.pn)&&void 0!==O?O:"",location_city:null!==(k=t.ct)&&void 0!==k?k:"",is_finish:0,create_time:a}))))}return 0===r.length?(console.log("No session params"),{code:200,msg:"Invild param"}):await this.batchInsert(this.tableName,r)}async fill(e){var t,i,a,n,o,r,d,u,g,m,_,p,f,v,w;if(!e.ak)return{code:200,msg:'Parameter "ak" not found'};if(!e.ut)return{code:200,msg:'Parameter "ut" not found'};if(!e.uuid)return{code:200,msg:'Parameter "uuid" not found'};const y=new h,T=await y.getPageAndCreate(e.ak,e.url,e.ttpj);if(!T||0===T.length)return{code:300,msg:"Not found this entry page"};this.debug&&console.log("pageInfo",JSON.stringify(T));const b=new l,N=new s.DateTime,D=new c,C=N.getTime(),$=e.fvts?N.strToTime(e.fvts):C,S=e.lvts?N.strToTime(e.lvts):0,O={appid:e.ak,version:null!==(t=e.v)&&void 0!==t?t:"",platform:b.getPlatformCode(e.ut,e.p),channel:D.getChannelCode(e),uuid:e.uuid,is_first_visit:S&&$!==S?0:1,first_visit_time:$,last_visit_time:C,visit_count:e.tvc?parseInt(e.tvc):1,entry_page_id:T._id,exit_page_id:T._id,page_count:0,event_count:0,duration:1,sdk_version:null!==(i=e.mpsdk)&&void 0!==i?i:"",platform_version:null!==(a=e.mpv)&&void 0!==a?a:"",device_os_name:e.p&&"i"===e.p?"ios":"android",device_os_version:null!==(n=e.sv)&&void 0!==n?n:"",device_vendor:null!==(o=e.brand)&&void 0!==o?o:"",device_model:null!==(r=e.md)&&void 0!==r?r:"",device_language:null!==(d=e.lang)&&void 0!==d?d:"",device_pixel_ratio:null!==(u=e.pr)&&void 0!==u?u:"",device_window_width:null!==(g=e.ww)&&void 0!==g?g:"",device_window_height:null!==(m=e.wh)&&void 0!==m?m:"",device_screen_width:null!==(_=e.sw)&&void 0!==_?_:"",device_screen_height:null!==(p=e.sh)&&void 0!==p?p:"",location_ip:"",location_latitude:e.lat?parseFloat(e.lat):0,location_longitude:e.lng?parseFloat(e.lng):0,location_country:null!==(f=e.cn)&&void 0!==f?f:"",location_province:null!==(v=e.pn)&&void 0!==v?v:"",location_city:null!==(w=e.ct)&&void 0!==w?w:"",is_finish:0,create_time:C},k=await this.insert(this.tableName,O);return k&&k.id?{code:0,msg:"success",data:{pageId:T._id,sessionLogId:k.id,entryPageId:O.entry_page_id,eventCount:O.event_count,startTime:O.first_visit_time,createTime:O.create_time,pageCount:O.page_count}}:{code:500,msg:"Filled error"}}async getSessionLog(e){const t=new h,i=await t.getPageAndCreate(e.ak,e.url,e.ttpj);if(!i||0===i.length)return{code:300,msg:"Not found this entry page"};const a=(new l).getPlatformCode(e.ut,e.p),n=await this.getCollection(this.tableName).where({appid:e.ak,platform:a,uuid:e.uuid,is_finish:0}).orderBy("create_time","desc").limit(1).get();if(n.data.length>0){const t=n.data[0],o=(new s.DateTime).getTime()-t.last_visit_time;return o>=18e5?(this.debug&&console.log("session log time expired",o),await this.update(this.tableName,{is_finish:1},{appid:e.ak,platform:a,uuid:e.uuid,is_finish:0}),await this.fill(e)):{code:0,msg:"success",data:{pageId:i._id,sessionLogId:t._id,entryPageId:t.entry_page_id,eventCount:t.event_count,startTime:t.first_visit_time,createTime:t.create_time,pageCount:t.page_count}}}return await this.fill(e)}async clean(e){e=Math.max(parseInt(e),1),console.log("clean session logs - day:",e);const t=new s.DateTime,i=await this.delete(this.tableName,{create_time:{$lt:t.getTimeBySetDays(0-e)}});return i.code||console.log("clean session log:",i),i}}t.SessionLog=g;class m extends a.BaseMod{constructor(){super(),this.tableName="stat-page-logs",this.sessionLogInfo=[]}async fill(e){let t,i,a,n;const o=[],r=[];let d,u,m;const _=[],p=new g,f=new h,v=new l,w=new s.DateTime,y=new c;for(const s in e){var T;if(t=e[s],["3","4"].includes(t.lt)&&!t.url&&t.urlref&&(t.url=t.urlref),d=t.ak+t.url,r[d])u=r[d];else{if(u=await f.getPageAndCreate(t.ak,t.url,t.ttpj),!u||0===u.length){console.log("Not found this page by param:",JSON.stringify(t));continue}r[d]=u}if(i=t.ak+t.uuid+t.p,this.sessionLogInfo[i])n=this.sessionLogInfo[i];else{if(n=await p.getSessionLog(t),n.code)return n;this.debug&&console.log("sessionLogInfo",JSON.stringify(n)),this.sessionLogInfo[i]=n}a=n.data.sessionLogId.toString(),o[a]?(o[a].pageCount+=1,o[a].pageId=u._id,console.log("update sessionData - "+a,o)):(o[a]={pageCount:n.data.pageCount+1,createTime:n.data.createTime,pageId:u._id},console.log("add sessionData - "+a,o)),d=t.ak+t.urlref,r[d]?m=r[d]:(m=await f.getPageAndCreate(t.ak,t.urlref,t.ttpj),m&&0!==m.length||(m._id=""),r[d]=m),_.push({appid:t.ak,version:null!==(T=t.v)&&void 0!==T?T:"",platform:v.getPlatformCode(t.ut,t.p),channel:y.getChannelCode(t),uuid:t.uuid,session_id:n.data.sessionLogId,current_page_id:u._id,previous_page_id:m._id,previous_page_duration:t.urlref_ts?parseInt(t.urlref_ts):0,previous_page_is_entry:m._id===n.data.entryPageId?1:0,create_time:w.getTime()})}if(0===_.length)return console.log("No page params"),{code:200,msg:"Invild param"};const b=await this.insert(this.tableName,_);if(b&&b.inserted){const e=w.getTime();for(const t in o){const i=e-o[t].createTime,s=i>1e3?parseInt(i/1e3):1;this.debug&&console.log("update session log by sid-"+t,{last_visit_time:e,duration:s,exit_page_id:o[t].pageId,page_count:o[t].pageCount}),await this.update(p.tableName,{last_visit_time:e,duration:s,exit_page_id:o[t].pageId,page_count:o[t].pageCount},{_id:t})}return{code:0,msg:"success"}}return{code:500,msg:"Filled error"}}async clean(e){e=Math.max(parseInt(e),1),console.log("clean page logs - day:",e);const t=new s.DateTime,i=await this.delete(this.tableName,{create_time:{$lt:t.getTimeBySetDays(0-e)}});return i.code||console.log("clean page log:",i),i}}t.PageLog=m;class _ extends a.BaseMod{constructor(){super(),this.tableName="stat-event-logs",this.sessionLogInfo=[]}async fill(e){let t,i,a,n;const o=[],r=[],d=[],h=new g,m=new u,_=new l,p=new s.DateTime,v=new c;for(const s in e){var w,y;if(t=e[s],i=t.ak+t.uuid+t.p,this.sessionLogInfo[i])n=this.sessionLogInfo[i];else{if(n=await h.getSessionLog(t),n.code)return n;this.debug&&console.log("sessionLogInfo",JSON.stringify(n)),this.sessionLogInfo[i]=n}a=n.data.sessionLogId.toString(),o[a]?o[a].eventCount++:o[a]={eventCount:n.data.eventCount+1,createTime:n.data.createTime};const l=await m.getEventAndCreate(t.ak,t.e_n);r.push({appid:t.ak,version:null!==(w=t.v)&&void 0!==w?w:"",platform:_.getPlatformCode(t.ut,t.p),channel:v.getChannelCode(t),uuid:t.uuid,session_id:n.data.sessionLogId,page_id:n.data.pageId,event_key:l.event_key,param:null!==(y=t.e_v)&&void 0!==y?y:"",create_time:p.getTime()}),"share"===l.event_key&&d.push(t)}if(0===r.length)return{code:200,msg:"Invild param"};if(d.length>0){const e=new f;await e.fill(d,this.sessionLogInfo)}const T=await this.insert(this.tableName,r);if(T&&T.inserted){const e=p.getTime();for(const t in o){const i=e-o[t].createTime,s=i>1e3?parseInt(i/1e3):1;await this.update(h.tableName,{last_visit_time:e,duration:s,event_count:o[t].eventCount},{_id:t})}return{code:0,msg:"success"}}return{code:500,msg:"Filled error"}}async clean(e){e=Math.max(parseInt(e),1),console.log("clean event logs - day:",e);const t=new s.DateTime,i=await this.delete(this.tableName,{create_time:{$lt:t.getTimeBySetDays(0-e)}});return i.code||console.log("clean event log:",i),i}}t.EventLog=_;class p extends a.BaseMod{constructor(){super(),this.tableName="stat-error-logs"}async fill(e){let t,i,a,o;const r=[],d=new l,h=new s.DateTime,u=new n.UniCrypto,g=new c,{needCheck:m,checkTime:_}=this.getConfig("errorCheck"),p=Math.max(_,1);for(const s in e){var f,v,w,y;t=e[s],i=u.md5(t.em),o="error-count-"+i,m&&(a=await this.getCache(o),a||(a=await this.getCollection(this.tableName).where({error_hash:i,create_time:{$gte:h.getTime()-6e4*p}}).count(),a&&a.total>0&&await this.setCache(o,a,60*p)),a&&a.total>0)?this.debug&&console.log("This error have already existsed: "+t.em):r.push({appid:t.ak,version:null!==(f=t.v)&&void 0!==f?f:"",platform:d.getPlatformCode(t.ut,t.p),channel:g.getChannelCode(t),uuid:t.uuid,sdk_version:null!==(v=t.mpsdk)&&void 0!==v?v:"",platform_version:null!==(w=t.mpv)&&void 0!==w?w:"",error_msg:null!==(y=t.em)&&void 0!==y?y:"",error_hash:i,create_time:h.getTime()})}if(0===r.length)return{code:200,msg:"Invild param"};const T=await this.insert(this.tableName,r);return T&&T.inserted?{code:0,msg:"success"}:{code:500,msg:"Filled error"}}async clean(e){e=Math.max(parseInt(e),1),console.log("clean error logs - day:",e);const t=new s.DateTime,i=await this.delete(this.tableName,{create_time:{$lt:t.getTimeBySetDays(0-e)}});return i.code||console.log("clean error log:",i),i}}t.ErrorLog=p;class f extends a.BaseMod{constructor(){super(),this.tableName="stat-share-logs"}async fill(e,t){let i,a,n;const o=[],r=new g,d=new l,h=new s.DateTime,u=new c;for(const s in e){var m;if(i=e[s],n=i.ak+i.uuid+i.p,t[n])a=t[n];else{if(a=await r.getSessionLog(i),a.code)return a;this.debug&&console.log("sessionLogInfo",JSON.stringify(a)),t[n]=a}o.push({appid:i.ak,version:null!==(m=i.v)&&void 0!==m?m:"",platform:d.getPlatformCode(i.ut,i.p),channel:u.getChannelCode(i),uuid:i.uuid,session_id:a.data.sessionLogId,page_id:a.data.pageId,create_time:h.getTime()})}if(0===o.length)return{code:200,msg:"Invild param"};const _=await this.insert(this.tableName,o);return _&&_.inserted?{code:0,msg:"success"}:{code:500,msg:"Filled error"}}async clean(e){e=Math.max(parseInt(e),1),console.log("clean share logs - day:",e);const t=new s.DateTime,i=await this.delete(this.tableName,{create_time:{$lt:t.getTimeBySetDays(0-e)}});return i.code||console.log("clean share log:",i),i}}t.ShareLog=f;class v extends a.BaseMod{constructor(){super(),this.tableName="stat-result",this.platforms=[],this.channels=[],this.versions=[]}async stat(e,t,i){if(!["hour","day","week","month"].includes(e))return{code:1002,msg:"This type is not allowed"};this.debug&&console.log("stat-result --type:"+e+", date:"+t+", reset:"+i),this.fillType=e;const a=(new s.DateTime).getTimeDimensionByType(e,-1,t);if(this.startTime=a.startTime,this.endTime=a.endTime,this.debug&&console.log("dimension time",this.startTime+"--"+this.endTime),i){const e=await this.delete(this.tableName,{start_time:this.startTime,end_time:this.endTime});console.log("delete old data result:",JSON.stringify(e))}else{if((await this.getCollection(this.tableName).where({dimension:this.fillType,start_time:this.startTime,end_time:this.endTime}).get()).data.length>0)return console.log("log have existed"),{code:1003,msg:"This log have existed"}}if(["week","month"].includes(this.fillType))return await this.statWeekOrMonth();this.sessionLog=new g;const n=await this.aggregate(this.sessionLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,is_first_visit:1,page_count:1,duration:1,create_time:1},match:{create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{appid:"$appid",version:"$version",platform:"$platform",channel:"$channel"},new_user_count:{$sum:"$is_first_visit"},page_view_count:{$sum:"$page_count"},total_duration:{$sum:"$duration"},session_times:{$sum:1}},sort:{new_user_count:1,page_view_count:1,session_times:1},getAll:!0});let o={code:0,msg:"success"};if(this.debug&&console.log("statRes",JSON.stringify(n)),n.data.length>0){this.fillData=[],this.composes=[];for(const e in n.data)await this.fill(n.data[e]);await this.replenishStat(),this.fillData.length>0&&(o=await this.batchInsert(this.tableName,this.fillData))}return o}async statWeekOrMonth(){const e=await this.aggregate(this.tableName,{project:{appid:1,version_id:1,platform_id:1,channel_id:1,new_user_count:1,page_visit_count:1,app_launch_count:1,error_count:1,bounce_times:1,duration:1,dimension:1,start_time:1},match:{dimension:"day",start_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{appid:"$appid",version_id:"$version_id",platform_id:"$platform_id",channel_id:"$channel_id"},new_user_count:{$sum:"$new_user_count"},error_count:{$sum:"$error_count"},page_count:{$sum:"$page_visit_count"},total_duration:{$sum:"$duration"},session_times:{$sum:"$app_launch_count"},total_bounce_times:{$sum:"$bounce_times"}},sort:{new_user_count:1,error_count:1,page_count:1},getAll:!0});let t={code:0,msg:"success"};if(this.debug&&console.log("statRes",JSON.stringify(e)),e.data.length>0){this.activeUsers=new w,this.fillData=[],this.composes=[];for(const t in e.data)await this.getWeekOrMonthData(e.data[t]);await this.replenishStat(),this.fillData.length>0&&(t=await this.batchInsert(this.tableName,this.fillData))}return t}async getWeekOrMonthData(e){const t=await this.getCollection(this.activeUsers.tableName).where({...e._id,dimension:this.fillType,create_time:{$gte:this.startTime,$lte:this.endTime}}).count();let i=0;t&&t.total>0&&(i=t.total);let a=0;e.total_duration>0&&e.session_times>0&&(a=Math.round(e.total_duration/e.session_times));let n=0;e.total_duration>0&&i>0&&(n=Math.round(e.total_duration/i));let o=0;e.total_bounce_times>0&&e.session_times>0&&(o=100*e.total_bounce_times/e.session_times,o=parseFloat(o.toFixed(2)));let r=e.new_user_count;const l=await this.getCollection(this.tableName).where({appid:e._id.appid,platform_id:e._id.platform_id,channel_id:e._id.channel_id,version_id:e._id.version_id,dimension:this.fillType,start_time:{$lt:this.startTime}}).orderBy("start_time","desc").limit(1).get();l&&l.data.length>0&&(r+=l.data[0].total_users);const d={appid:e._id.appid,platform_id:e._id.platform_id,channel_id:e._id.channel_id,version_id:e._id.version_id,total_users:r,new_user_count:e.new_user_count,active_user_count:i,app_launch_count:e.session_times,page_visit_count:e.page_view_count,error_count:e.error_count,duration:e.total_duration,avg_session_time:a,avg_user_time:n,bounce_times:e.total_bounce_times,bounce_rate:o,retention:{},dimension:this.fillType,stat_date:(new s.DateTime).getDate("Ymd",this.startTime),start_time:this.startTime,end_time:this.endTime};return this.fillData.push(d),this.composes.push(e._id.appid+"_"+e._id.platform_id+"_"+e._id.channel_id+"_"+e._id.version_id),d}async fill(e){let t=null;if(this.platforms&&this.platforms[e._id.platform])t=this.platforms[e._id.platform];else{const i=new l;t=await i.getPlatformAndCreate(e._id.platform,null),t&&0!==t.length||(t._id=""),this.platforms[e._id.platform]=t,this.debug&&console.log("platformInfo",JSON.stringify(t))}let i=null;const a=e._id.appid+"_"+t._id+"_"+e._id.channel;if(this.channels&&this.channels[a])i=this.channels[a];else{const s=new c;i=await s.getChannelAndCreate(e._id.appid,t._id,e._id.channel),i&&0!==i.length||(i._id=""),this.channels[a]=i,this.debug&&console.log("channelInfo",JSON.stringify(i))}let n=null;const o=e._id.appid+"_"+t._id+"_"+e._id.version;if(this.versions&&this.versions[o])n=this.versions[o];else{const i=new r;n=await i.getVersionAndCreate(e._id.appid,t._id,e._id.version),n&&0!==n.length||(n._id=""),this.versions[o]=n,this.debug&&console.log("versionInfo",JSON.stringify(n))}const d=e._id;Object.assign(d,{create_time:{$gte:this.startTime,$lte:this.endTime}});const h=await this.aggregate(this.sessionLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,uuid:1,create_time:1},match:d,group:[{_id:{uuid:"$uuid"}},{_id:{},total_users:{$sum:1}}]});let u=0;h.data.length>0&&(u=h.data[0].total_users);const g=new p,m=await this.getCollection(g.tableName).where(d).count();let _=0;m&&m.total>0&&(_=m.total);let f=0;e.total_duration>0&&e.session_times>0&&(f=Math.round(e.total_duration/e.session_times));let v=0;e.total_duration>0&&u>0&&(v=Math.round(e.total_duration/u));let w=0;const y=await this.getCollection(this.sessionLog.tableName).where({...d,page_count:1}).count();y&&y.total>0&&(w=y.total);let T=0;w>0&&e.session_times>0&&(T=100*w/e.session_times,T=parseFloat(T.toFixed(2)));const b=e.session_times;let N=e.new_user_count;const D=await this.getCollection(this.tableName).where({appid:e._id.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,dimension:this.fillType,start_time:{$lt:this.startTime}}).orderBy("start_time","desc").limit(1).get();D&&D.data.length>0&&(N+=D.data[0].total_users);const C=new s.DateTime,$={appid:e._id.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,total_users:N,new_user_count:e.new_user_count,active_user_count:u,app_launch_count:b,page_visit_count:e.page_view_count,error_count:_,duration:e.total_duration,avg_session_time:f,avg_user_time:v,bounce_times:w,bounce_rate:T,retention:{},dimension:this.fillType,stat_date:C.getDate("Ymd",this.startTime),start_time:this.startTime,end_time:this.endTime};return this.fillData.push($),this.composes.push(e._id.appid+"_"+t._id+"_"+i._id+"_"+n._id),$}async replenishStat(){this.debug&&console.log("composes data",this.composes);const e=new s.DateTime,{startTime:t}=e.getTimeDimensionByType(this.fillType,-1,this.startTime),i=await this.selectAll(this.tableName,{start_time:t,dimension:this.fillType},{appid:1,platform_id:1,channel_id:1,version_id:1,total_users:1});if(!i||0===i.data.length)return!1;let a;this.debug&&console.log("preStatData",JSON.stringify(i));const n=[];for(const t in i.data)a=i.data[t].appid+"_"+i.data[t].platform_id+"_"+i.data[t].channel_id+"_"+i.data[t].version_id,this.composes.includes(a)||n.includes(a)?this.debug&&console.log("preKey -have",a):(n.push(a),this.debug&&console.log("preKey -add",a),this.fillData.push({appid:i.data[t].appid,platform_id:i.data[t].platform_id,channel_id:i.data[t].channel_id,version_id:i.data[t].version_id,total_users:i.data[t].total_users,new_user_count:0,active_user_count:0,app_launch_count:0,page_visit_count:0,error_count:0,duration:0,avg_session_time:0,avg_user_time:0,bounce_times:0,bounce_rate:0,retention:{},dimension:this.fillType,stat_date:e.getDate("Ymd",this.startTime),start_time:this.startTime,end_time:this.endTime}));return!0}async retentionStat(e,t){var i;t=null!==(i=t)&&void 0!==i?i:(new s.DateTime).getTimeBySetDays(-1,t);if(!["day","week","month"].includes(e))return{code:1002,msg:"This type is not allowed"};let a=[];switch(e){case"week":case"month":a=[1,2,3,4,5,6,7,8,9];break;default:a=[1,2,3,4,5,6,7,14,30]}let n={code:0,msg:"success"};for(const i in a)n="day"===e?await this.retentionFillDayly(e,a[i],t):await this.retentionFillWeekOrMonth(e,a[i],t);return n}async retentionFillDayly(e,t,i){if("day"!==e)return{code:301,msg:"Type error:"+e};const a=new s.DateTime,{startTime:n,endTime:o}=a.getTimeDimensionByType(e,0-t,i);if(!n||!o)return{code:1001,msg:"The statistic time get failed"};const d=a.getTimeDimensionByType(e,0,i),h=await this.selectAll(this.tableName,{dimension:e,start_time:n,end_time:o});if(this.debug&&console.log("resultLogRes",JSON.stringify(h)),!h||0===h.data.length)return this.debug&&console.log("Not found this log --"+e+":"+t+", start:"+n+",endTime:"+o),{code:1e3,msg:"Not found this log"};const u=new g,m=new l,_=new c,p=new r;let f=null;for(const i in h.data){const s=h.data[i];let a=null;this.platforms&&this.platforms[s.platform_id]?a=this.platforms[s.platform_id]:(a=await this.getById(m.tableName,s.platform_id),a&&0!==a.length||(a.code=""),this.platforms[s.platform_id]=a,this.debug&&console.log("platformInfo",JSON.stringify(a)));let r=null;this.channels&&this.channels[s.channel_id]?r=this.channels[s.channel_id]:(r=await this.getById(_.tableName,s.channel_id),r&&0!==r.length||(r.channel_code=""),this.channels[s.channel_id]=r,this.debug&&console.log("channelInfo",JSON.stringify(r)));let l=null;this.versions&&this.versions[s.version_id]?l=this.versions[s.version_id]:(l=await this.getById(p.tableName,s.version_id),l&&0!==l.length||(l.version=""),this.versions[s.version_id]=l,this.debug&&console.log("versionInfo",JSON.stringify(l)));const c=await this.aggregate(u.tableName,{project:{appid:1,version:1,platform:1,channel:1,uuid:1,create_time:1},match:{appid:s.appid,version:l.version,platform:a.code,channel:r.channel_code,create_time:{$gte:n,$lte:o}},group:{_id:{uuid:"$uuid"},create_time:{$min:"$create_time"},sessionCount:{$sum:1}},sort:{create_time:1,sessionCount:1},getAll:!0});this.debug&&console.log("activeUserRes",JSON.stringify(c));let g=0,v=0;if(c&&c.data.length>0){const e=c.data.length,t=[];for(const e in c.data)t.push(c.data[e]._id.uuid);this.debug&&console.log("thisDayActiveUuids",JSON.stringify(t));const i=await this.aggregate(u.tableName,{project:{appid:1,version:1,platform:1,channel:1,uuid:1,create_time:1},match:{appid:s.appid,version:l.version,platform:a.code,channel:r.channel_code,uuid:{$in:t},create_time:{$gte:d.startTime,$lte:d.endTime}},group:[{_id:{uuid:"$uuid"}},{_id:{},total_users:{$sum:1}}]});this.debug&&console.log("retentionActiveUserRes",JSON.stringify(i)),i&&i.data.length>0&&(v=i.data[0].total_users,g=parseFloat((100*v/e).toFixed(2)))}const w=await this.aggregate(u.tableName,{project:{appid:1,version:1,platform:1,channel:1,is_first_visit:1,uuid:1,create_time:1},match:{appid:s.appid,version:l.version,platform:a.code,channel:r.channel_code,is_first_visit:1,create_time:{$gte:n,$lte:o}},group:{_id:{uuid:"$uuid"},create_time:{$min:"$create_time"},sessionCount:{$sum:1}},sort:{create_time:1,sessionCount:1},getAll:!0});let y=0,T=0;if(w&&w.data.length>0){const e=w.data.length,t=[];for(const e in w.data)t.push(w.data[e]._id.uuid);this.debug&&console.log("thisDayNewUuids",JSON.stringify(t));const i=await this.aggregate(u.tableName,{project:{appid:1,version:1,platform:1,channel:1,is_first_visit:1,uuid:1,create_time:1},match:{appid:s.appid,version:l.version,platform:a.code,channel:r.channel_code,is_first_visit:1,uuid:{$in:t},create_time:{$gte:d.startTime,$lte:d.endTime}},group:[{_id:{uuid:"$uuid"}},{_id:{},total_users:{$sum:1}}]});i&&i.data.length>0&&(T=i.data[0].total_users,y=parseFloat((100*T/e).toFixed(2)))}const b=s.retention,N=e.substr(0,1)+"_"+t;b.active_user||(b.active_user={}),b.active_user[N]={user_count:v,user_rate:g},b.new_user||(b.new_user={}),b.new_user[N]={user_count:T,user_rate:y},this.debug&&console.log("retentionData",JSON.stringify(b)),f=await this.update(this.tableName,{retention:b},{_id:s._id})}return f&&f.id?{code:0,msg:"success"}:{code:500,msg:"retention data update failed"}}async retentionFillWeekOrMonth(e,t,i){if(!["week","month"].includes(e))return{code:301,msg:"Type error:"+e};const a=new s.DateTime,{startTime:n,endTime:o}=a.getTimeDimensionByType(e,0-t,i);if(!n||!o)return{code:1001,msg:"The statistic time get failed"};const r=a.getTimeDimensionByType(e,0,i),l=await this.selectAll(this.tableName,{dimension:e,start_time:n,end_time:o});if(this.debug&&console.log("resultLogRes",JSON.stringify(l)),!l||0===l.data.length)return this.debug&&console.log("Not found this session log --"+e+":"+t+", start:"+n+",endTime:"+o),{code:1e3,msg:"Not found this session log"};const d=new w;let c,h,u,g,m,_=null;for(const i in l.data){const s=l.data[i];if(c=await this.selectAll(d.tableName,{appid:s.appid,platform_id:s.platform_id,channel_id:s.channel_id,version_id:s.version_id,dimension:e,create_time:{$gte:n,$lte:o}},{uuid:1}),this.debug&&console.log("activeUserRes",JSON.stringify(c)),h=0,u=0,c&&c.data.length>0){const t=c.data.length,i=[];for(const e in c.data)i.push(c.data[e].uuid);this.debug&&console.log("thisDayActiveUuids",JSON.stringify(i));const a=await this.getCollection(d.tableName).where({appid:s.appid,platform_id:s.platform_id,channel_id:s.channel_id,version_id:s.version_id,uuid:{$in:i},dimension:e,create_time:{$gte:r.startTime,$lte:r.endTime}}).count();this.debug&&console.log("retentionActiveUserRes",JSON.stringify(a)),a&&a.total>0&&(u=a.total,h=parseFloat((100*u/t).toFixed(2)))}const a=await this.selectAll(d.tableName,{appid:s.appid,platform_id:s.platform_id,channel_id:s.channel_id,version_id:s.version_id,is_new:1,dimension:e,create_time:{$gte:n,$lte:o}},{uuid:1});if(g=0,m=0,a&&a.data.length>0){const t=a.data.length,i=[];for(const e in a.data)i.push(a.data[e].uuid);const n=await this.getCollection(d.tableName).where({appid:s.appid,platform_id:s.platform_id,channel_id:s.channel_id,version_id:s.version_id,uuid:{$in:i},dimension:e,create_time:{$gte:r.startTime,$lte:r.endTime}}).count();n&&n.total>0&&(m=n.total,g=parseFloat((100*m/t).toFixed(2)))}const p=s.retention,f=e.substr(0,1)+"_"+t;p.active_user||(p.active_user={}),p.active_user[f]={user_count:u,user_rate:h},p.new_user||(p.new_user={}),p.new_user[f]={user_count:m,user_rate:g},this.debug&&console.log("retentionData",JSON.stringify(p)),_=await this.update(this.tableName,{retention:p},{_id:s._id})}return _&&_.id?{code:0,msg:"success"}:{code:500,msg:"retention data update failed"}}async clean(){console.log("clean hour logs - day:",7);const e=new s.DateTime,t=await this.delete(this.tableName,{dimension:"hour",start_time:{$lt:e.getTimeBySetDays(-7)}});t.code||console.log("clean hour logs - res:",t)}}t.StatResult=v;class w extends a.BaseMod{constructor(){super(),this.tableName="stat-active-users",this.platforms=[],this.channels=[],this.versions=[]}async stat(e,t){const i=(new s.DateTime).getTimeDimensionByType("day",-1,e);if(this.startTime=i.startTime,t){const e=await this.delete(this.tableName,{create_time:{$gte:i.startTime,$lte:i.endTime}});console.log("delete old data result:",JSON.stringify(e))}else{if((await this.getCollection(this.tableName).where({create_time:{$gte:i.startTime,$lte:i.endTime}}).get()).data.length>0)return console.log("data have exists"),{code:1003,msg:"Users data in this time have already existed"}}const a=new g,o=await this.aggregate(a.tableName,{project:{appid:1,version:1,platform:1,channel:1,is_first_visit:1,create_time:1,uuid:1},match:{create_time:{$gte:i.startTime,$lte:i.endTime}},group:{_id:{appid:"$appid",version:"$version",platform:"$platform",channel:"$channel",uuid:"$uuid"},is_new:{$max:"$is_first_visit"},create_time:{$min:"$create_time"}},sort:{create_time:1},getAll:!0});let r={code:0,msg:"success"};if(o.data.length>0){const e=new n.UniCrypto,t=[];let i,s;for(const a in o.data)s=o.data[a],i=e.md5(s._id.appid+s._id.platform+s._id.version+s._id.channel),t[i]?(t[i].uuids.push(s._id.uuid),t[i].info[s._id.uuid]={is_new:s.is_new,create_time:s.create_time}):(t[i]={appid:s._id.appid,platform:s._id.platform,version:s._id.version,channel:s._id.channel,uuids:[],info:[]},t[i].uuids.push(s._id.uuid),t[i].info[s._id.uuid]={is_new:s.is_new,create_time:s.create_time});this.fillData=[];for(const e in t)await this.getFillData(t[e]);this.fillData.length>0&&(r=await this.batchInsert(this.tableName,this.fillData))}return r}async getFillData(e){let t=null;if(this.platforms&&this.platforms[e.platform])t=this.platforms[e.platform];else{const i=new l;t=await i.getPlatformAndCreate(e.platform,null),t&&0!==t.length||(t._id=""),this.platforms[e.platform]=t,this.debug&&console.log("platformInfo",JSON.stringify(t))}let i=null;const a=e.appid+"_"+t._id+"_"+e.channel;if(this.channels&&this.channels[a])i=this.channels[a];else{const s=new c;i=await s.getChannelAndCreate(e.appid,t._id,e.channel),i&&0!==i.length||(i._id=""),this.channels[a]=i,this.debug&&console.log("channelInfo",JSON.stringify(i))}let n=null;const o=e.appid+"_"+t._id+"_"+e.version;if(this.versions&&this.versions[o])n=this.versions[o];else{const i=new r;n=await i.getVersionAndCreate(e.appid,t._id,e.version),n&&0!==n.length||(n._id=""),this.versions[o]=n,this.debug&&console.log("versionInfo",JSON.stringify(n))}const d=new s.DateTime,h=d.getTimeDimensionByType("week",0,this.startTime),u=[],g=await this.selectAll(this.tableName,{appid:e.appid,version_id:n._id,platform_id:t._id,channel_id:i._id,uuid:{$in:e.uuids},dimension:"week",create_time:{$gte:h.startTime,$lte:h.endTime}},{uuid:1});if(this.debug&&console.log("haveWeekList",JSON.stringify(g)),g.data.length>0)for(const e in g.data)u.push(g.data[e].uuid);const m=d.getTimeDimensionByType("month",0,this.startTime),_=[],p=await this.selectAll(this.tableName,{appid:e.appid,version_id:n._id,platform_id:t._id,channel_id:i._id,uuid:{$in:e.uuids},dimension:"month",create_time:{$gte:m.startTime,$lte:m.endTime}},{uuid:1});if(this.debug&&console.log("haveMonthList",JSON.stringify(p)),p.data.length>0)for(const e in p.data)_.push(p.data[e].uuid);for(const s in e.uuids)u.includes(e.uuids[s])||this.fillData.push({appid:e.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,is_new:e.info[e.uuids[s]].is_new,uuid:e.uuids[s],dimension:"week",create_time:e.info[e.uuids[s]].create_time}),_.includes(e.uuids[s])||this.fillData.push({appid:e.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,is_new:e.info[e.uuids[s]].is_new,uuid:e.uuids[s],dimension:"month",create_time:e.info[e.uuids[s]].create_time});return!0}async clean(){console.log("clean user's weekly logs - week:",2);const e=new s.DateTime,t=await this.delete(this.tableName,{dimension:"week",create_time:{$lt:e.getTimeBySetWeek(-2)}});t.code||console.log("clean user's weekly logs - res:",t);console.log("clean user's monthly logs - month:",9);const i=await this.delete(this.tableName,{dimension:"month",create_time:{$lt:e.getTimeBySetMonth(-9)}});return i.code||console.log("clean user's monthly logs - res:",t),i}}t.ActvieUsers=w;class y extends a.BaseMod{constructor(){super(),this.tableName="stat-page-result",this.platforms=[],this.channels=[],this.versions=[]}async stat(e,t,i){if(!["day"].includes(e))return{code:1002,msg:"This type is not allowed"};this.fillType=e;const a=(new s.DateTime).getTimeDimensionByType(e,-1,t);if(this.startTime=a.startTime,this.endTime=a.endTime,this.debug&&console.log("dimension time",this.startTime+"--"+this.endTime),i){const e=await this.delete(this.tableName,{start_time:this.startTime,end_time:this.endTime});console.log("delete old data result:",JSON.stringify(e))}else{if((await this.getCollection(this.tableName).where({start_time:this.startTime,end_time:this.endTime}).get()).data.length>0)return console.log("log have exists"),{code:1003,msg:"This log have existed"}}this.pageLog=new m;const n=await this.aggregate(this.pageLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,current_page_id:1,create_time:1},match:{create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{appid:"$appid",version:"$version",platform:"$platform",channel:"$channel",current_page_id:"$current_page_id"},visit_times:{$sum:1}},sort:{visit_times:1},getAll:!0});let o={code:0,msg:"success"};if(this.debug&&console.log("Page statRes",JSON.stringify(n)),n.data.length>0){this.fillData=[];for(const e in n.data)await this.fill(n.data[e]);this.fillData.length>0&&(o=await this.batchInsert(this.tableName,this.fillData))}return o}async fill(e){let t=null;if(this.platforms&&this.platforms[e._id.platform])t=this.platforms[e._id.platform];else{const i=new l;t=await i.getPlatformAndCreate(e._id.platform,null),t&&0!==t.length||(t._id=""),this.platforms[e._id.platform]=t,this.debug&&console.log("platformInfo",JSON.stringify(t))}let i=null;const a=e._id.appid+"_"+t._id+"_"+e._id.channel;if(this.channels&&this.channels[a])i=this.channels[a];else{const s=new c;i=await s.getChannelAndCreate(e._id.appid,t._id,e._id.channel),i&&0!==i.length||(i._id=""),this.channels[a]=i,this.debug&&console.log("channelInfo",JSON.stringify(i))}let n=null;const o=e._id.appid+"_"+t._id+"_"+e._id.version;if(this.versions&&this.versions[o])n=this.versions[o];else{const i=new r;n=await i.getVersionAndCreate(e._id.appid,t._id,e._id.version),n&&0!==n.length||(n._id=""),this.versions[o]=n,this.debug&&console.log("versionInfo",JSON.stringify(n))}const d=e._id;Object.assign(d,{create_time:{$gte:this.startTime,$lte:this.endTime}}),this.debug&&console.log("matchCondition",JSON.stringify(d));const h=await this.aggregate(this.pageLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,uuid:1,current_page_id:1,create_time:1},match:d,group:[{_id:{uuid:"$uuid"}},{_id:{},total_users:{$sum:1}}]});let u=0;h.data.length>0&&(u=h.data[0].total_users);const m=new g;let _=0;const p=await this.getCollection(m.tableName).where({appid:e._id.appid,version:e._id.version,platform:e._id.platform,channel:e._id.channel,exit_page_id:e._id.current_page_id,create_time:{$gte:this.startTime,$lte:this.endTime}}).count();p&&p.total>0&&(_=p.total);const v=await this.aggregate(this.pageLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,previous_page_id:1,previous_page_duration:1,create_time:1},match:{appid:e._id.appid,version:e._id.version,platform:e._id.platform,channel:e._id.channel,previous_page_id:e._id.current_page_id,create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{},total_duration:{$sum:"$previous_page_duration"}}});let w=0;v.data.length>0&&(w=v.data[0].total_duration);const y=new f,T=await this.aggregate(y.tableName,{project:{appid:1,version:1,platform:1,channel:1,page_id:1,create_time:1},match:{appid:e._id.appid,version:e._id.version,platform:e._id.platform,channel:e._id.channel,page_id:e._id.current_page_id,create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{},share_count:{$sum:1}}});let b=0;T.data.length>0&&(b=T.data[0].share_count);const N=await this.aggregate(this.pageLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,previous_page_id:1,previous_page_duration:1,previous_page_is_entry:1,create_time:1},match:{appid:e._id.appid,version:e._id.version,platform:e._id.platform,channel:e._id.channel,previous_page_id:e._id.current_page_id,previous_page_is_entry:1,create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{},entry_count:{$sum:1},entry_duration:{$sum:"$previous_page_duration"}}});let D=0,C=0;N.data.length>0&&(D=N.data[0].entry_count,C=N.data[0].entry_duration);const $=await this.aggregate(this.pageLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,uuid:1,previous_page_id:1,previous_page_is_entry:1,create_time:1},match:{appid:e._id.appid,version:e._id.version,platform:e._id.platform,channel:e._id.channel,previous_page_id:e._id.current_page_id,previous_page_is_entry:1,create_time:{$gte:this.startTime,$lte:this.endTime}},group:[{_id:{uuid:"$uuid"}},{_id:{},entry_users:{$sum:1}}]});let S=0;$.data.length>0&&(S=$.data[0].entry_users);let O=0;const k=await this.getCollection(m.tableName).where({appid:e._id.appid,version:e._id.version,platform:e._id.platform,channel:e._id.channel,entry_page_id:e._id.current_page_id,page_count:1,create_time:{$gte:this.startTime,$lte:this.endTime}}).count();k&&k.total>0&&(O=k.total);let I=0;O>0&&e.visit_times>0&&(I=100*O/e.visit_times,I=parseFloat(I.toFixed(2)));const B=new s.DateTime,L={appid:e._id.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,page_id:e._id.current_page_id,visit_times:e.visit_times,visit_users:u,exit_times:_,duration:w,share_count:b,entry_users:S,entry_count:D,entry_duration:C,bounce_rate:I,dimension:this.fillType,stat_date:B.getDate("Ymd",this.startTime),start_time:this.startTime,end_time:this.endTime};return this.fillData.push(L),L}}t.PageResult=y;class T extends a.BaseMod{constructor(){super(),this.tableName="stat-event-result",this.platforms=[],this.channels=[],this.versions=[]}async stat(e,t,i){if(!["day"].includes(e))return{code:1002,msg:"This type is not allowed"};this.fillType=e;const a=(new s.DateTime).getTimeDimensionByType(e,-1,t);if(this.startTime=a.startTime,this.endTime=a.endTime,this.debug&&console.log("dimension time",this.startTime+"--"+this.endTime),i){const e=await this.delete(this.tableName,{start_time:this.startTime,end_time:this.endTime});console.log("delete old data result:",JSON.stringify(e))}else{if((await this.getCollection(this.tableName).where({start_time:this.startTime,end_time:this.endTime}).get()).data.length>0)return console.log("event log have existed"),{code:1003,msg:"This log have existed"}}this.eventLog=new _;const n=await this.aggregate(this.eventLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,event_key:1,uuid:1,create_time:1},match:{create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{appid:"$appid",version:"$version",platform:"$platform",channel:"$channel",event_key:"$event_key"},event_count:{$sum:1}},sort:{event_count:1},getAll:!0});let o={code:0,msg:"success"};if(this.debug&&console.log("statRes",JSON.stringify(n)),n.data.length>0){this.fillData=[];for(const e in n.data)await this.fill(n.data[e]);this.fillData.length>0&&(o=await this.batchInsert(this.tableName,this.fillData))}return o}async fill(e){let t=null;if(this.platforms&&this.platforms[e._id.platform])t=this.platforms[e._id.platform];else{const i=new l;t=await i.getPlatformAndCreate(e._id.platform,null),t&&0!==t.length||(t._id=""),this.platforms[e._id.platform]=t,this.debug&&console.log("platformInfo",JSON.stringify(t))}let i=null;const a=e._id.appid+"_"+t._id+"_"+e._id.channel;if(this.channels&&this.channels[a])i=this.channels[a];else{const s=new c;i=await s.getChannelAndCreate(e._id.appid,t._id,e._id.channel),i&&0!==i.length||(i._id=""),this.channels[a]=i,this.debug&&console.log("channelInfo",JSON.stringify(i))}let n=null;const o=e._id.appid+"_"+t._id+"_"+e._id.version;if(this.versions&&this.versions[o])n=this.versions[o];else{const i=new r;n=await i.getVersionAndCreate(e._id.appid,t._id,e._id.version),n&&0!==n.length||(n._id=""),this.versions[o]=n,this.debug&&console.log("versionInfo",JSON.stringify(n))}const d=e._id;Object.assign(d,{create_time:{$gte:this.startTime,$lte:this.endTime}}),this.debug&&console.log("matchCondition",JSON.stringify(d));const h=await this.aggregate(this.eventLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,event_key:1,uuid:1,create_time:1},match:d,group:[{_id:{uuid:"$uuid"}},{_id:{},total_users:{$sum:1}}]});let u=0;h.data.length>0&&(u=h.data[0].total_users);const g=new s.DateTime,m={appid:e._id.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,event_key:e._id.event_key,event_count:e.event_count,user_count:u,dimension:this.fillType,stat_date:g.getDate("Ymd",this.startTime),start_time:this.startTime,end_time:this.endTime};return this.fillData.push(m),m}}t.EventResult=T;class b extends a.BaseMod{constructor(){super(),this.tableName="stat-error-result",this.platforms=[],this.channels=[],this.versions=[],this.errors=[]}async stat(e,t,i){if(!["day"].includes(e))return{code:1002,msg:"This type is not allowed"};this.fillType=e;const a=(new s.DateTime).getTimeDimensionByType(e,-1,t);if(this.startTime=a.startTime,this.endTime=a.endTime,this.debug&&console.log("dimension time",this.startTime+"--"+this.endTime),i){const e=await this.delete(this.tableName,{start_time:this.startTime,end_time:this.endTime});console.log("delete old data result:",JSON.stringify(e))}else{if((await this.getCollection(this.tableName).where({start_time:this.startTime,end_time:this.endTime}).get()).data.length>0)return console.log("error log have existed"),{code:1003,msg:"This log have existed"}}this.errorLog=new p;const n=await this.aggregate(this.errorLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,error_hash:1,create_time:1},match:{create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{appid:"$appid",version:"$version",platform:"$platform",channel:"$channel",error_hash:"$error_hash"},error_count:{$sum:1}},sort:{error_count:1},getAll:!0});let o={code:0,msg:"success"};if(this.debug&&console.log("statRes",JSON.stringify(n)),n.data.length>0){this.fillData=[];for(const e in n.data)await this.fill(n.data[e]);this.fillData.length>0&&(o=await this.batchInsert(this.tableName,this.fillData))}return o}async fill(e){let t=null;if(this.platforms&&this.platforms[e._id.platform])t=this.platforms[e._id.platform];else{const i=new l;t=await i.getPlatformAndCreate(e._id.platform,null),t&&0!==t.length||(t._id=""),this.platforms[e._id.platform]=t,this.debug&&console.log("platformInfo",JSON.stringify(t))}let i=null;const a=e._id.appid+"_"+t._id+"_"+e._id.channel;if(this.channels&&this.channels[a])i=this.channels[a];else{const s=new c;i=await s.getChannelAndCreate(e._id.appid,t._id,e._id.channel),i&&0!==i.length||(i._id=""),this.channels[a]=i,this.debug&&console.log("channelInfo",JSON.stringify(i))}let n=null;const o=e._id.appid+"_"+t._id+"_"+e._id.version;if(this.versions&&this.versions[o])n=this.versions[o];else{const i=new r;n=await i.getVersionAndCreate(e._id.appid,t._id,e._id.version),n&&0!==n.length||(n._id=""),this.versions[o]=n,this.debug&&console.log("versionInfo",JSON.stringify(n))}let d=null;if(this.errors&&this.errors[e._id.error_hash])d=this.errors[e._id.error_hash];else{const t="uni-stat-errors-"+e._id.error_hash;d=await this.getCache(t),d||(d=await this.getCollection(this.errorLog.tableName).where({error_hash:e._id.error_hash}).limit(1).get(),d&&0!==d.data.length?(d=d.data[0],await this.setCache(t,d)):d.error_msg=""),this.errors[e._id.error_hash]=d}const h=e._id;Object.assign(h,{create_time:{$gte:this.startTime,$lte:this.endTime}});const u=await this.getCollection(this.errorLog.tableName).where(h).orderBy("create_time","desc").limit(1).get();let g="";u&&u.data.length>0&&(g=u.data[0].create_time);const m=new s.DateTime,_={appid:e._id.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,hash:e._id.error_hash,msg:d.error_msg,count:e.error_count,last_time:g,dimension:this.fillType,stat_date:m.getDate("Ymd",this.startTime),start_time:this.startTime,end_time:this.endTime};return this.fillData.push(_),_}}t.ErrorResult=b;class N extends a.BaseMod{constructor(){super(),this.tableName="stat-loyalty-result",this.platforms=[],this.channels=[],this.versions=[]}async stat(e,t,i){if(!["day"].includes(e))return{code:1002,msg:"This type is not allowed"};this.fillType=e;const a=new s.DateTime,n=a.getTimeDimensionByType(e,-1,t);if(this.startTime=n.startTime,this.endTime=n.endTime,this.debug&&(console.log("this time",a.getTime()),console.log("dimension time",this.startTime+"--"+this.endTime)),i){const e=await this.delete(this.tableName,{start_time:this.startTime,end_time:this.endTime});console.log("delete old data result:",JSON.stringify(e))}else{if((await this.getCollection(this.tableName).where({start_time:this.startTime,end_time:this.endTime}).get()).data.length>0)return console.log("loyalty log have existed"),{code:1003,msg:"This log have existed"}}this.sessionLog=new g;const o=await this.aggregate(this.sessionLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,page_count:1,duration:1,create_time:1},match:{create_time:{$gte:this.startTime,$lte:this.endTime}},group:{_id:{appid:"$appid",version:"$version",platform:"$platform",channel:"$channel"},page_count_sum:{$sum:"$page_count"},duration_sum:{$sum:"$duration"}},sort:{page_count_sum:1,duration_sum:1},getAll:!0});let r={code:0,msg:"success"};if(this.debug&&console.log("statRes",JSON.stringify(o)),o.data.length>0){this.fillData=[];for(const e in o.data)await this.fill(o.data[e]);this.fillData.length>0&&(r=await this.batchInsert(this.tableName,this.fillData))}return r}async fill(e){let t=null;if(this.platforms&&this.platforms[e._id.platform])t=this.platforms[e._id.platform];else{const i=new l;t=await i.getPlatformAndCreate(e._id.platform,null),t&&0!==t.length||(t._id=""),this.platforms[e._id.platform]=t,this.debug&&console.log("platformInfo",JSON.stringify(t))}let i=null;const a=e._id.appid+"_"+t._id+"_"+e._id.channel;if(this.channels&&this.channels[a])i=this.channels[a];else{const s=new c;i=await s.getChannelAndCreate(e._id.appid,t._id,e._id.channel),i&&0!==i.length||(i._id=""),this.channels[a]=i,this.debug&&console.log("channelInfo",JSON.stringify(i))}let n=null;const o=e._id.appid+"_"+t._id+"_"+e._id.version;if(this.versions&&this.versions[o])n=this.versions[o];else{const i=new r;n=await i.getVersionAndCreate(e._id.appid,t._id,e._id.version),n&&0!==n.length||(n._id=""),this.versions[o]=n,this.debug&&console.log("versionInfo",JSON.stringify(n))}const d=[1,2,3,4,[5,10],[10]],h=Object.assign(e._id,{create_time:{$gte:this.startTime,$lte:this.endTime}}),u={visit_users:{},visit_times:{}};for(const e in d){let t={page_count:d[e]};Array.isArray(d[e])&&(t=2===d[e].length?{page_count:{$gte:d[e][0],$lte:d[e][1]}}:{page_count:{$gt:d[e][0]}});const i={...h,...t},s=await this.aggregate(this.sessionLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,page_count:1,create_time:1},match:i,group:{_id:{},total_visits:{$sum:1}}});this.debug&&(console.log("vistResCondtion",JSON.stringify(i)),console.log("vistRes",JSON.stringify(s)));let a=0;s.data.length>0&&(a=s.data[0].total_visits);const n=await this.aggregate(this.sessionLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,page_count:1,create_time:1,uuid:1},match:i,group:[{_id:{uuid:"$uuid"}},{_id:{},total_users:{$sum:1}}]});this.debug&&(console.log("userResCondtion",JSON.stringify(i)),console.log("userRes",JSON.stringify(n)));let o=0;n.data.length>0&&(o=n.data[0].total_users);const r="p_"+(Array.isArray(d[e])?d[e][0]:d[e]);u.visit_users[r]=o,u.visit_times[r]=a}const g=[[0,2],[3,5],[6,10],[11,20],[21,30],[31,50],[51,100],[100]],m={visit_users:{},visit_times:{}};for(const e in g){let t={duration:g[e]};Array.isArray(g[e])&&(t=2===g[e].length?{duration:{$gte:g[e][0],$lte:g[e][1]}}:{duration:{$gt:g[e][0]}});const i={...h,...t};this.debug&&console.log("searchCondition",JSON.stringify(i));const s=await this.aggregate(this.sessionLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,duration:1,create_time:1},match:i,group:{_id:{},total_visits:{$sum:1}}});this.debug&&console.log("vistRes",JSON.stringify(s));let a=0;s.data.length>0&&(a=s.data[0].total_visits);const n=await this.aggregate(this.sessionLog.tableName,{project:{appid:1,version:1,platform:1,channel:1,uuid:1,duration:1,create_time:1},match:i,group:[{_id:{uuid:"$uuid"}},{_id:{},total_users:{$sum:1}}]});this.debug&&console.log("userRes",JSON.stringify(n));let o=0;n.data.length>0&&(o=n.data[0].total_users);const r="s_"+(Array.isArray(g[e])?g[e][0]:g[e]);m.visit_users[r]=o,m.visit_times[r]=a}const _=new s.DateTime,p={appid:e._id.appid,platform_id:t._id,channel_id:i._id,version_id:n._id,visit_depth_data:u,duration_data:m,stat_date:_.getDate("Ymd",this.startTime),start_time:this.startTime,end_time:this.endTime};return this.fillData.push(p),p}}t.Loyalty=N;class D extends a.BaseMod{constructor(){super(),this.tableName="stat-run-errors"}async create(e){if(!e)return;return await this.insert(this.tableName,e)}}t.RunErrors=D;t.default=class{async report(e){let t={code:0,msg:"success"};if(!e)return{code:200,msg:"Invild params"};const i=JSON.parse(e.requests);if(!i||0===i.length)return{code:200,msg:"Invild params"};const s=[],a=[],n=[],o=[];for(const e in i){const t=this.parseUrlParams(i[e]);if(!t.ak)return{code:201,msg:"Not found appid"};if(!t.lt)return{code:202,msg:"Not found this log type"};switch(parseInt(t.lt)){case 1:s.push(t);break;case 3:case 4:case 11:a.push(t);break;case 21:n.push(t);break;case 31:o.push(t);break;default:console.log('Invalid type by param "lt:'+t.lt+'"')}}if(s.length>0){const e=new g;t=await e.batchFill(s)}if(a.length>0){const e=new m;t=await e.fill(a)}if(n.length>0){const e=new _;t=await e.fill(n)}if(o.length>0){const e=new p;t=await e.fill(o)}return t}parseUrlParams(e){return e&&"string"==typeof e?e.split("&").reduce((e,t)=>{const i=t.split("=");return Object.assign({[i[0]]:i[1]},e)},{}):e}async statCron(e){const t=new a.BaseMod,i=new s.DateTime;console.log("Cron start time: ",i.getDate("Y-m-d H:i:s"));const n=i.getTimeInfo(null,!1),o=t.getConfig("cron"),r=t.getConfig("cronMin"),l=t.getConfig("realtimeStat");let d=null;if(o&&o.length>0)for(var c in o){const e=o[c].type,i=o[c].time.split(" ");4!==i.length||r||i.splice(3,1),t.debug&&console.log("cronTime",i),4===i.length?"*"!==i[0]?n.nWeek==i[0]&&n.nHour==i[2]&&n.nMinutes==i[3]&&(console.log(e+"--week run"),d=await this.stat({type:e,dimension:"week"})):"*"!==i[1]?n.nDay==i[1]&&n.nHour==i[2]&&n.nMinutes==i[3]&&(console.log(e+"--month run"),d=await this.stat({type:e,dimension:"month"})):"*"!==i[2]?n.nHour==i[2]&&n.nMinutes==i[3]&&(console.log(e+"--day run"),d=await this.stat({type:e,dimension:"day"})):"*"!==i[3]&&n.nMinutes==i[3]&&l&&(console.log(e+"--hour run"),d=await this.stat({type:e,dimension:"hour"})):3===i.length&&("*"!==i[0]?n.nWeek==i[0]&&n.nHour==i[2]&&(console.log(e+"--week run"),d=await this.stat({type:e,dimension:"week"})):"*"!==i[1]?n.nDay==i[1]&&n.nHour==i[2]&&(console.log(e+"--month run"),d=await this.stat({type:e,dimension:"month"})):"*"!==i[2]?n.nHour==i[2]&&(console.log(e+"--day run"),d=await this.stat({type:e,dimension:"day"})):l&&(console.log(e+"--hour run"),d=await this.stat({type:e,dimension:"hour"})))}return console.log("Cron end time: ",i.getDate("Y-m-d H:i:s")),{code:0,msg:"Task have done",lastCronResult:d}}async stat(e){const{type:t,dimension:i,date:a,reset:n}=e;let o={code:0,msg:"success"};try{switch(t){case"stat":{const e=new v;o=await e.stat(i,a,n);break}case"active-user":{const e=new w;o=await e.stat(a,n);break}case"retention":{const e=new v;o=await e.retentionStat(i,a,n);break}case"page":{const e=new y;o=await e.stat(i,a,n);break}case"event":{const e=new T;o=await e.stat(i,a,n);break}case"error":{const e=new b;o=await e.stat(i,a,n);break}case"loyalty":{const e=new N;o=await e.stat(i,a,n);break}case"clean":o=await this.cleanLog()}}catch(t){if(o={code:500,msg:"server error"},this.tryTimes?this.tryTimes++:this.tryTimes=1,this.tryTimes<=2)e.reset=!0,o=await this.stat(e);else{console.log("server error: "+t);(new D).create({mod:"stat",params:e,error:t,create_time:(new s.DateTime).getTime()})}}return o}async cleanLog(){const e=(new a.BaseMod).getConfig("cleanLog");if(!e||!e.open)return{code:100,msg:"The log cleanup service has not been turned on"};const t={code:0,msg:"success",data:{}};if(e.reserveDays.sessionLog>0){const i=new g;t.data.sessionLog=await i.clean(e.reserveDays.sessionLog)}if(e.reserveDays.pageLog>0){const i=new m;t.data.pageLog=await i.clean(e.reserveDays.pageLog)}if(e.reserveDays.eventLog>0){const i=new _;t.data.eventLog=await i.clean(e.reserveDays.eventLog)}if(e.reserveDays.shareLog>0){const i=new f;t.data.shareLog=await i.clean(e.reserveDays.shareLog)}if(e.reserveDays.errorLog>0){const i=new p;t.data.errorLog=await i.clean(e.reserveDays.errorLog)}const i=new w;t.data.actvieUsersLog=await i.clean();const s=new v;return t.data.resultHourLog=await s.clean(),t}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DateTime=void 0;t.DateTime=class{constructor(){this.defaultDateFormat="Y-m-d H:i:s",this.defaultTimezone=8,this.setTimeZone(this.defaultTimezone)}setTimeZone(e){return e&&(this.timezone=parseInt(e)),this}getDateObj(e){return e?new Date(e):new Date}getTime(e,t){let i=this.getDateObj(e).getTime();return t&&(i=Math.trunc(i/1e3)),i}getDate(e,t){return this.dateFormat(e,t)}getTimeByTimeZone(e,t){this.setTimeZone(t);const i=e?new Date(e):new Date,s=i.getTime();return 6e4*i.getTimezoneOffset()+s+36e5*this.timezone}getTimeInfo(e,t=!0){e=this.getTimeByTimeZone(e);const i=this.getDateObj(e),s={nYear:i.getFullYear(),nMonth:i.getMonth()+1,nWeek:i.getDay()||7,nDay:i.getDate(),nHour:i.getHours(),nMinutes:i.getMinutes(),nSeconds:i.getSeconds()};if(t)for(const e in s)s[e]<10&&(s[e]="0"+s[e]);return s}dateFormat(e,t){const i=this.getTimeInfo(t);let s=e=e||this.defaultDateFormat;return e&&(s=s.replace(/Y/,i.nYear)),!1!==e.indexOf("m")&&(s=s.replace(/m/,i.nMonth)),!1!==e.indexOf("d")&&(s=s.replace(/d/,i.nDay)),!1!==e.indexOf("H")&&(s=s.replace(/H/,i.nHour)),!1!==e.indexOf("i")&&(s=s.replace(/i/,i.nMinutes)),!1!==e.indexOf("s")&&(s=s.replace(/s/,i.nSeconds)),s}getUTC(e){return this.getDateObj(e).toUTCString()}getISO(e){return this.getDateObj(e).toISOString()}getDiffDays(e,t){var i;if(!e)return!1;let s=(t=null!==(i=t)&&void 0!==i?i:this.getTime())-e;return s<0&&(s=Math.abs(s)),Math.ceil(s/864e5)}strToTime(e){return 10===Array.from(e).length&&(e+="000"),this.getTime(parseInt(e))}getTimeBySetDays(e,t,i=!1){const s=this.getDateObj(t);s.setDate(s.getDate()+e);let a=s.getTime();if(!i){const e=this.getDate("Y-m-d 00:00:00",a);a=this.getTimeByDateAndTimezone(e)}return a}getTimeBySetHours(e,t,i=!1){const s=this.getDateObj(t);s.setHours(s.getHours()+e);let a=s.getTime();if(!i){const e=this.getDate("Y-m-d H:00:00",a);a=this.getTimeByDateAndTimezone(e)}return a}getTimeBySetWeek(e,t,i=!1){const s=this.getDateObj(t),a=this.getTimeInfo(t).nWeek;e&&(e=7*e+(1-a)),s.setDate(s.getDate()+e);let n=s.getTime();if(!i){const e=this.getDate("Y-m-d 00:00:00",n);n=this.getTimeByDateAndTimezone(e)}return n}getTimeBySetMonth(e,t,i=!1){const s=this.getDateObj(t);s.setMonth(s.getMonth()+e);let a=s.getTime();if(!i){const e=this.getDate("Y-m-01 00:00:00",a);a=this.getTimeByDateAndTimezone(e)}return a}getTimeByDateAndTimezone(e,t){t||(t=this.timezone);const i=this.getDateObj(e);return i.getTime()-(6e4*i.getTimezoneOffset()+36e5*t)}getTimeDimensionByType(e,t=0,i,s=!1){let a=0,n=0;switch(e){case"hour":a=this.getTimeBySetHours(t,i,s),n=s?a:a+3599999;break;case"day":a=this.getTimeBySetDays(t,i,s),n=s?a:a+86399999;break;case"week":a=this.getTimeBySetWeek(t,i,s),n=s?a+5184e5:a+5184e5+86399999;break;case"month":{a=this.getTimeBySetMonth(t,i,s);const e=this.getDateObj(this.getDate("Y-m-d H:i:s",a)),o=new Date(e.getFullYear(),e.getMonth()+1,1).getTime();n=s?o-864e5:this.getTimeByDateAndTimezone(o)-1;break}}return{startTime:a,endTime:n}}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BaseMod=void 0;var s=i(5);t.BaseMod=class{constructor(){this.config=(0,s.getConfig)("config"),this.debug=this.config.debug,this.primaryKey="_id",this.maxLimit=500,this.dbfix=!0,this.tablePrefix="opendb",this.tableName="",this.params={},this._dbConnection(),this._redisConnection()}_dbConnection(){if(!this.db)try{this.db=uniCloud.database(),this.dbCmd=this.db.command,this.dbAggregate=this.dbCmd.aggregate}catch(e){console.log("database connection failed: "+e)}}_redisConnection(){if(this.config.redis&&!this.redis)try{this.redis=uniCloud.redis()}catch(e){console.log("redis server connection failed: "+e)}}getConfig(e){return this.config[e]}getTableName(e){e=e||this.tableName;return this.dbfix&&!e.includes(this.tablePrefix)?this.tablePrefix+"-"+e:e}getCollection(e){return this.db.collection(this.getTableName(e))}async getCache(e){if(!this.redis||!e)return!1;let t=await this.redis.get(e);if(this.debug&&console.log("get cache result by key:"+e,t),t)try{t=JSON.parse(t)}catch(e){this.debug&&console.log("json parse error: "+e)}return t}async setCache(e,t,i){return!(!this.redis||!e)&&(t instanceof Object&&(t=JSON.stringify(t)),this.debug&&console.log("set cache result by key:"+e,t),await this.redis.set(e,t,"EX",i||this.config.cachetime))}async clearCache(e){return!(!this.redis||!e)&&(this.debug&&console.log("delete cache by key:"+e),await this.redis.del(e))}async getById(e,t){const i={};i[this.primaryKey]=t;const s=await this.getCollection(this.getTableName(e)).where(i).get();return s&&s.data.length>0?s.data[0]:[]}async insert(e,t){return t=t||this.params,await this.getCollection(this.getTableName(e)).add(t)}async update(e,t,i){return t=t||this.params,await this.getCollection(this.getTableName(e)).where(i).update(t)}async delete(e,t){return!!t&&await this.getCollection(this.getTableName(e)).where(t).remove()}async batchInsert(e,t){let i=this.getConfig("batchInsertNum")||3e3;i=Math.min(i,5e3);const s=Math.ceil(t.length/i);let a,n,o,r;const l={code:0,msg:"success",data:{inserted:0}};for(let d=0;d<s;d++){a=d*i,n=Math.min(a+i,t.length),o=[];for(let e=a;e<n;e++)o.push(t[e]);o.length>0&&(r=await this.insert(e,o),r&&r.inserted&&(l.data.inserted+=r.inserted))}return l}async batchDelete(e,t){let i,s,a;const n={code:0,msg:"success",data:{deleted:0}};let o=!0;for(;o;){const r=await this.getCollection(e).where(t).limit(5e3).get();if(r&&r.data.length>0){i=[];for(let e=0;e<r.data.length;e++)i.push(r.data[e][this.primaryKey]);i.length>0&&(a={},a[this.primaryKey]={$in:i},s=await this.delete(e,a),s&&s.deleted&&(n.data.deleted+=s.deleted))}else o=!1}return n}async select(e,t){const{where:i,field:s,skip:a,limit:n,orderBy:o,count:r}=t,l=this.getCollection(e);return i&&(i.length>0?i.forEach(e=>{l.where(i[e])}):l.where(i)),o&&Object.keys(o).forEach(e=>{l.orderBy(e,o[e])}),a&&l.skip(a),n&&l.limit(n),s&&l.field(s),r?await l.count():await l.get()}async selectAll(e,t,i={}){const s=await this.getCollection(e).where(t).count();if(s&&s.total>0){const a=Math.ceil(s.total/this.maxLimit);let n,o;for(let s=0;s<a;s++)if(n=await this.getCollection(e).where(t).orderBy(this.primaryKey,"asc").skip(s*this.maxLimit).limit(this.maxLimit).field(i).get(),o){o.affectedDocs+=n.affectedDocs;for(const e in n.data)o.data.push(n.data[e])}else o=n;return o}return{affectedDocs:0,data:[]}}async aggregate(e,t){const{project:i,match:s,lookup:a,group:n,skip:o,limit:r,sort:l,getAll:d}=t,c=this.getCollection(e).aggregate();if(i&&c.project(i),s&&c.match(s),a&&c.lookup(a),n)if(n.length>0)for(const e in n)c.group(n[e]);else c.group(n);if(l&&c.sort(l),o&&c.skip(o),r?c.limit(r):d||c.limit(this.maxLimit),!d)return await c.end();const h=await c.group({_id:{},aggregate_count:{$sum:1}}).end();if(h&&h.data.length>0&&h.data[0].aggregate_count>0){const i=h.data[0].aggregate_count,s=Math.ceil(i/this.maxLimit);let a,n;t.limit=this.maxLimit,t.getAll=!1;for(let i=0;i<s;i++)if(t.skip=i*t.limit,a=await this.aggregate(e,t),n){n.affectedDocs+=a.affectedDocs;for(const e in a.data)n.data.push(a.data[e])}else n=a;return n}return{affectedDocs:0,data:[]}}}},function(e,t){"use strict";let i;Object.defineProperty(t,"__esModule",{value:!0}),t.getConfig=function(e,t){if(!e)return!1;const s=i&&i({pluginId:"uni-stat"});if(!s.hasFile(e+".json"))return!1;const a=s.requireFile(e);return t?a[t]:a};try{i=require("uni-config-center")}catch(e){}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UniCrypto=void 0;const s=i(7);t.UniCrypto=class{constructor(e){this.init(e)}init(e){return this.config={AES:{mod:"aes-128-cbc",pasword:"UniStat!010",iv:"UniStativ",charset:"utf8",encodeReturnType:"base64"},MD5:{encodeReturnType:"hex"},...e||{}},this}showConfig(){return this.config}getCrypto(){return s}aesEncode(e,t,i,a,n,o){const r=s.createCipheriv(n||this.config.AES.mod,i||this.config.AES.pasword,a||this.config.AES.iv);let l=r.update(e,o||this.config.AES.charset,"binary");return l+=r.final("binary"),l=Buffer.from(l,"binary").toString(t||this.config.AES.encodeReturnType),l}aesDecode(e,t,i,a,n,o){e=Buffer.from(e,t||this.config.AES.encodeReturnType).toString("binary");const r=s.createDecipheriv(n||this.config.AES.mod,i||this.config.AES.pasword,a||this.config.AES.iv);let l=r.update(e,"binary",o||this.config.AES.charset);return l+=r.final(o||this.config.AES.charset),l}md5(e,t){const i=s.createHash("md5");return i.update(e),i.digest(t||this.config.MD5.encodeReturnType)}}},function(e,t){e.exports=require("crypto")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s={FormData:!0,UniCloudError:!0};Object.defineProperty(t,"FormData",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(t,"UniCloudError",{enumerable:!0,get:function(){return n.default}});var a=l(i(9)),n=l(i(10)),o=i(11);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(s,e)||e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var r=i(0);function l(e){return e&&e.__esModule?e:{default:e}}Object.keys(r).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(s,e)||e in t&&t[e]===r[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}}))}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=class{constructor(){this._boundary="------FormDataBaseBoundary"+Math.random().toString(36).substring(2),this.dataList=[]}_addData(e){const t=this.dataList[this.dataList.length-1];"string"==typeof e&&"string"==typeof t?this.dataList[this.dataList.length-1]=t+"\r\n"+e:this.dataList.push(e)}append(e,t,i){this._addData("--"+this._boundary);let s=`Content-Disposition: form-data; name="${e}"`;switch(Buffer.isBuffer(t)){case!0:if(!i.filename||!i.contentType)throw new Error("filename and contentType required");s+=`; filename="${i.filename}"`,this._addData(s),this._addData("Content-Type: "+i.contentType),this._addData(""),this._addData(t);break;default:this._addData(""),this._addData(t)}}getHeaders(e){const t={"Content-Type":"multipart/form-data; boundary="+this._boundary};return Object.assign(t,e)}getBuffer(){let e=Buffer.alloc(0);return this.dataList.forEach(t=>{e=Buffer.isBuffer(t)?Buffer.concat([e,t]):Buffer.concat([e,Buffer.from(""+t)]),e=Buffer.concat([e,Buffer.from("\r\n")])}),e=Buffer.concat([e,Buffer.from("--"+this._boundary+"--")]),e}},e.exports=t.default},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;class s extends Error{constructor(e){super(e.message),this.errMsg=e.message||"",Object.defineProperties(this,{message:{get(){return`errCode: ${e.code||""} | errMsg: `+this.errMsg},set(e){this.errMsg=e}}})}}t.default=s,e.exports=t.default},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createApi=function(e,t){const i=new e(t);return new Proxy(i,{get:function(e,t){if("function"==typeof e[t]&&0!==t.indexOf("_")&&e._protocols&&e._protocols[t]){const i=e._protocols[t];return async function(s){s=a(s,i.args);let n=await e[t](s);return n=a(n,i.returnValue),n}}return e[t]}})};var s=i(0);function a(e={},t){if(!t||!e)return e;const i=["_pre","_purify","_post"];t._pre&&(e=t._pre(e));let a={shouldDelete:new Set([])};if(t._purify){const e=t._purify;for(const t in e)e[t]=new Set(e[t]);a=Object.assign(a,e)}if((0,s.isPlainObject)(t))for(const n in t){const o=t[n];(0,s.isFn)(o)&&-1===i.indexOf(n)?e[n]=o(e):"string"==typeof o&&-1===i.indexOf(n)&&(e[n]=e[o],a.shouldDelete.add(o))}else(0,s.isFn)(t)&&(e=t(e));if(a.shouldDelete)for(const t of a.shouldDelete)delete e[t];return t._post&&(e=t._post(e)),e}}]));